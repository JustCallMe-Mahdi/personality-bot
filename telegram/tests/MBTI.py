from aiogram import Bot, Dispatcher, Router, F
from db.database import get_user_profile, save_latest_test, save_user_result
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, FSInputFile, ReplyKeyboardMarkup,KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import os
from datetime import datetime
import pytz
from aiogram import types

router = Router()

MBTI_start_button = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="🟢 ساده (16 سوال)", callback_data="mbti_simple"),
            InlineKeyboardButton(text="🔵 پیشرفته (32 سوال)", callback_data="mbti_advanced")
        ],
        [
            InlineKeyboardButton(text="تست MBTI چیه❓", callback_data="mbti_help"),
        ],
        [InlineKeyboardButton(text="بازگشت 🔙", callback_data="main_menu")],
    ]
)

main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="🧠 تست ها")],
        [KeyboardButton(text="💬 چت ناشناس"), KeyboardButton(text="🎲 سرگرمی و تست فان")],
        [KeyboardButton(text="🎥 فیلم و مدیا"), KeyboardButton(text="🎁 کیف پول")],
        [KeyboardButton(text="🎖️ چالش روزانه"), KeyboardButton(text="📊 رتبه‌بندی")],
        [KeyboardButton(text="📚 ویکی‌بات"), KeyboardButton(text="📞 پشتیبانی")]
    ],
    resize_keyboard=True,
    input_field_placeholder="یک گزینه رو انتخاب کن..."
)






@router.callback_query(F.data == "MBTI_test")
async def mbti_start(callback: CallbackQuery, state: FSMContext):
    profile = get_user_profile(callback.from_user.id)
    name = profile[0] if profile else "رفیق"
    await callback.message.answer(f"""🧬 تست شخصیت MBTI: خودتو کشف کن!
قراره با یکی از معروف‌ترین تست‌های روانشناسی دنیا آشنا بشی.
این تست بهت می‌گه چطور فکر می‌کنی، تصمیم می‌گیری، و با دنیا تعامل داری.
کافیه فقط انتخاب کنی:""", reply_markup=MBTI_start_button)


@router.callback_query(F.data == "main_menu")
async def back_to_main_menu(callback: CallbackQuery, state: FSMContext):
    profile = get_user_profile(callback.from_user.id)
    name = profile[0] if profile else "رفیق"

    await callback.message.answer(
        f"""🎉 برگشتیم به منوی اصلی، {name} جان!
از منوی زیر یکی رو انتخاب کن:""",
        reply_markup=main_menu
    )
    await callback.answer()




#Guide MBTI test
mbti_guide_text = """
📘 راهنمای تست شخصیت MBTI

ما توی این ربات دو نسخه‌ی متفاوت از تست MBTI رو برات آماده کردیم:

1️⃣ **نسخه‌ی ساده (16 سوال)**
🔹 سریع و رایگانه  
🔹 ولی دقتش پایین‌تره (تقریباً 60 تا 70 درصد قابل اعتماده)  
🔹 سوال‌هاش به سبک «آره یا نه» طراحی شدن تا با کمترین درگیری ذهنی، سریع جواب بدی  
🔹 مناسب برای وقتی که وقت کم داری یا می‌خوای خیلی سریع یه دید کلی بگیری

2️⃣ **نسخه‌ی پیشرفته (32 سوال دقیق و تحلیلی)**
🔸 دقت بالا (حدود 90٪ به بالا)  
🔸 سوال‌هاش عمیق‌ترن و همراه با توضیحات روی هر گزینه طراحی شدن  
🔸 این نسخه پولیه چون زمان، انرژی و تحلیل زیادی برای طراحی‌ش صرف شده  
🔸 مناسب کساییه که واقعاً می‌خوان خودشونو بهتر بشناسن یا دنبال تصمیم‌گیری‌های دقیق‌تر توی زندگی، کار، ارتباطات و رشد شخصی هستن

💰 **هزینه‌ی نسخه پیشرفته:** 39,000 تومان  

🔐 پس از خرید، دسترسی دائمی به تست پیشرفته برای شما باز میشه و می‌تونی هرچقدر خواستی ازش استفاده کنی یا نتایجت رو دوباره بررسی کنی.

---

📌 تست MBTI چیه و چرا مهمه؟

تست MBTI یکی از معتبرترین ابزارهای شناخت شخصیت در دنیا است. این تست کمک می‌کنه بفهمی:

• چطور فکر می‌کنی و تصمیم می‌گیری  
• توی جمع‌ چطوری رفتار می‌کنی  
• چه کاری بهت می‌سازه و کجا انرژی‌تو از دست می‌دی  
• چطور بهتر یاد می‌گیری و چطور بهتر ارتباط می‌گیری

ما این تست رو اینجا آوردیم تا کمکت کنیم خودت رو بهتر بشناسی و آگاهانه‌تر مسیر رشدت رو بسازی. 🎯

---

❓ پیشنهاد می‌کنیم:
اول تست ساده رو بزنی تا آشنا بشی.
بعد اگر حس کردی نتیجه‌اش مبهمه یا دوست داری دقیق‌تر بشی، نسخه پیشرفته رو امتحان کن.

هر سوالی داشتی، پشتیبانی همیشه باهاته. 🙌
"""

guide_back_button = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="🔙 بازگشت", callback_data="main_menu")]
    ]
)

@router.callback_query(F.data == "mbti_help")
async def show_mbti_help(callback: CallbackQuery):
    await callback.message.edit_text(
        text=mbti_guide_text,
        reply_markup=guide_back_button
    )
    await callback.answer()



#تست پیشرفته MBTI
@router.callback_query(F.data == "mbti_advanced")
async def advanced_test_intro(callback: CallbackQuery):
    text = """
✨ تست شخصیت پیشرفته MBTI ✨

این تست، ورژن حرفه‌ای و دقیق ماست که با ۳۲ سوال عمیق و تحلیلی، ویژگی‌های واقعی و پنهان شخصیتت رو آشکار می‌کنه.

🔒 این تست به‌دلیل طراحی پیچیده و تحلیل‌های دقیق، هزینه‌ای جزئی داره، ولی مطمئن باش ارزشش رو داره!

💰 هزینه: 39,000 تومان  
این سرمایه‌گذاری برای خودشناسی دقیق‌تر و موفقیت بیشتره.

👀 آماده‌ای وارد این تجربه متفاوت بشی و خودت رو بهتر از همیشه بشناسی؟

دکمه زیر رو بزن و بزن بریم! 🚀
"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="✅ بله، ادامه می‌دم", callback_data="mbti_advanced_start")],
        [InlineKeyboardButton(text="🔙 بازگشت به منوی اصلی", callback_data="main_menu")]
    ])

    await callback.message.edit_text(text, reply_markup=keyboard)
    await callback.answer()



mbti_advanced_questions = [
    {
        "text": """1️⃣ وقتی انرژی دارم، بیشتر دلم می‌خواد با بقیه وقت بگذرونم تا اینکه تنها باشم.  
✅ آره یعنی جمع‌گرا و اجتماعی هستی،  
❌ نه یعنی ترجیح می‌دی تنها باشی و خودتو بازیابی کنی،  
❓ نمی‌دونم یعنی بستگی به حالت داره.""",
        "dimension": "EI",
        "direction": "E"
    },
    {
        "text": """2️⃣ به جای تکیه بر حس، بیشتر دنبال داده‌ها و جزئیات واقعی هستم.  
✅ آره یعنی واقع‌گرا و جزئی‌نگری،  
❌ نه یعنی بیشتر با حس درونی و شهود پیش می‌ری،  
❓ نمی‌دونم یعنی گاهی با واقعیت پیش میری گاهی با حس.""",
        "dimension": "SN",
        "direction": "S"
    },
    {
        "text": """3️⃣ معمولاً تصمیم‌هام بر اساس منطق و تحلیل هست، نه احساس.  
✅ آره یعنی تصمیماتت منطقی و تحلیلی‌ان،  
❌ نه یعنی بیشتر دلی و احساسی تصمیم می‌گیری،  
❓ نمی‌دونم یعنی ترکیبی از هر دو سبکی.""",
        "dimension": "TF",
        "direction": "T"
    },
    {
        "text": """4️⃣ ترجیح می‌دم از قبل برای کارهام برنامه داشته باشم، نه اینکه فی‌البداهه عمل کنم.  
✅ آره یعنی برنامه‌ریزی برات مهمه،  
❌ نه یعنی با جریان پیش میری و منعطفی،  
❓ نمی‌دونم یعنی بعضی وقتا برنامه‌ریزی می‌کنی بعضی وقتا نه.""",
        "dimension": "JP",
        "direction": "J"
    },
    {
        "text": """5️⃣ بودن با دیگران بهم انرژی می‌ده، نه اینکه خسته‌م کنه.  
✅ آره یعنی جمع بهت انرژی می‌ده،  
❌ نه یعنی بعد از جمع بودن خسته می‌شی،  
❓ نمی‌دونم یعنی بستگی داره به جمع و شرایط.""",
        "dimension": "EI",
        "direction": "E"
    },
#     {
#         "text": """6️⃣ بیشتر وقتا واقعیت‌های ملموس رو ترجیح می‌دم تا ایده‌های فرضی.
# ✅ آره یعنی اهل تجربه‌های واقعی هستی،
# ❌ نه یعنی به ایده‌ها و مفاهیم ذهنی علاقه‌مندتری،
# ❓ نمی‌دونم یعنی گاهی واقع‌گرایی گاهی خیال‌پرداز.""",
#         "dimension": "SN",
#         "direction": "S"
#     },
#     {
#         "text": """7️⃣ سعی می‌کنم همیشه منصف و منطقی باشم، حتی اگه کسی ناراحت بشه.
# ✅ آره یعنی منطق برات مهم‌تر از احساساته،
# ❌ نه یعنی ترجیح می‌دی دل کسی نشکنه حتی اگه منطق زیر سوال بره،
# ❓ نمی‌دونم یعنی بسته به موقعیت رفتار می‌کنی.""",
#         "dimension": "TF",
#         "direction": "T"
#     },
#     {
#         "text": """8️⃣ دوست دارم بدونم قراره چی پیش بیاد و همه چیز تحت کنترل باشه.
# ✅ آره یعنی دنبال پیش‌بینی‌پذیری و نظم هستی،
# ❌ نه یعنی اهل انعطاف و تغییر لحظه‌ای هستی،
# ❓ نمی‌دونم یعنی به موقعیت بستگی داره.""",
#         "dimension": "JP",
#         "direction": "J"
#     },
#     {
#         "text": """9️⃣ بودن تو جمع باعث می‌شه شاد و سرزنده‌تر باشم.
# ✅ آره یعنی برون‌گرا و جمع‌محور هستی،
# ❌ نه یعنی ترجیح می‌دی تنها باشی و از درون انرژی بگیری،
# ❓ نمی‌دونم یعنی هم جمع‌دوستی هم خلوت‌طلب.""",
#         "dimension": "EI",
#         "direction": "E"
#     },
#     {
#         "text": """🔟 بیشتر به چیزایی که قابل مشاهده و قابل سنجش هستن اعتماد دارم.
# ✅ آره یعنی واقع‌گرا و علمی فکر می‌کنی،
# ❌ نه یعنی حس و شهود درونیت راهنمای اصلیته،
# ❓ نمی‌دونم یعنی گاهی یکی گاهی اون یکی.""",
#         "dimension": "SN",
#         "direction": "S"
#     },
#     {
#         "text": """1️⃣1️⃣ ترجیح می‌دم حرف حق رو بزنم حتی اگه ناراحت‌کننده باشه.
# ✅ آره یعنی صداقت و منطق برات مهم‌تر از احساساته،
# ❌ نه یعنی بیشتر رعایت احساسات دیگران رو می‌کنی،
# ❓ نمی‌دونم یعنی بستگی به طرف مقابل داره.""",
#         "dimension": "TF",
#         "direction": "T"
#     },
#     {
#         "text": """2️⃣1️⃣ وقتی پروژه‌ای دارم، همه‌چیز رو دقیق زمان‌بندی می‌کنم.
# ✅ آره یعنی نظم و مدیریت زمان برات مهمه،
# ❌ نه یعنی بیشتر با حال لحظه جلو میری،
# ❓ نمی‌دونم یعنی بعضی وقتا دقیق برنامه‌ریزی می‌کنی بعضی وقتا نه.""",
#         "dimension": "JP",
#         "direction": "J"
#     },
#     {
#         "text": """3️⃣1️⃣ بعد از یه روز طولانی، بودن کنار آدم‌ها خستگی‌مو در میاره.
# ✅ آره یعنی تعامل اجتماعی برات انرژی‌بخشه،
# ❌ نه یعنی تعامل زیاد خسته‌ت می‌کنه،
# ❓ نمی‌دونم یعنی بستگی داره به شرایط و نوع جمع.""",
#         "dimension": "EI",
#         "direction": "E"
#     },
#     {
#         "text": """4️⃣1️⃣ به جای اینکه تئوری ببافم، سعی می‌کنم تو عمل همه‌چیزو بفهمم.
# ✅ آره یعنی عمل‌گرا و واقع‌نگری،
# ❌ نه یعنی اول از همه دنبال درک مفاهیم و تئوری‌ها هستی،
# ❓ نمی‌دونم یعنی بسته به موضوع رفتارت فرق داره.""",
#         "dimension": "SN",
#         "direction": "S"
#     },
#     {
#         "text": """5️⃣1️⃣ تصمیم‌گیری باید بر اساس منطق باشه، نه احساسات شخصی.
# ✅ آره یعنی منطق برات اصل تصمیم‌گیریه،
# ❌ نه یعنی احساسات و روابط رو تو تصمیمات در نظر می‌گیری،
# ❓ نمی‌دونم یعنی بستگی به شرایط داره.""",
#         "dimension": "TF",
#         "direction": "T"
#     },
#     {
#         "text": """6️⃣1️⃣ برنامه‌ریزی برام مهمه چون حس امنیت و نظم می‌ده.
# ✅ آره یعنی با برنامه زندگی می‌کنی،
# ❌ نه یعنی دوست داری با جریان پیش بری،
# ❓ نمی‌دونم یعنی گاهی برنامه‌دار، گاهی رها.""",
#         "dimension": "JP",
#         "direction": "J"
#     },
#     {
#         "text": """7️⃣1️⃣ وقتی تنها می‌مونم زیاد انرژی نمی‌گیرم، بیشتر تو جمع شارژ می‌شم.
# ✅ آره یعنی بودن با دیگران شارژت می‌کنه،
# ❌ نه یعنی با تنهایی انرژی می‌گیری،
# ❓ نمی‌دونم یعنی به نوع جمع یا حال دلت بستگی داره.""",
#         "dimension": "EI",
#         "direction": "E"
#     },
#     {
#         "text": """8️⃣1️⃣ دنبال چیزایی هستم که ثابت شده و قبلاً تجربه‌شون شده.
# ✅ آره یعنی به تجربه‌های گذشته اعتماد داری،
# ❌ نه یعنی دنبال راه‌های جدید و خلاقانه‌ای،
# ❓ نمی‌دونم یعنی بسته به شرایط تصمیم می‌گیری.""",
#         "dimension": "SN",
#         "direction": "S"
#     },
#     {
#         "text": """9️⃣1️⃣ اگه کسی خطا کنه، اول به دلایل منطقی‌ش نگاه می‌کنم.
# ✅ آره یعنی نگاهت منطقی و واقع‌بینانه‌ست،
# ❌ نه یعنی اول به احساسات و شرایط فرد نگاه می‌کنی،
# ❓ نمی‌دونم یعنی گاهی این‌طوری گاهی اون‌طوری.""",
#         "dimension": "TF",
#         "direction": "T"
#     },
#     {
#         "text": """0️⃣2️⃣ وقتی قراره کاری رو انجام بدم، از قبل مسیرشو مشخص می‌کنم.
# ✅ آره یعنی دقیق و اهل طرح‌ریزی‌ای،
# ❌ نه یعنی بیشتر به حس لحظه‌ای تکیه می‌کنی،
# ❓ نمی‌دونم یعنی هر دو رو تجربه کردی.""",
#         "dimension": "JP",
#         "direction": "J"
#     },
#     {
#         "text": """1️⃣2️⃣ بیشتر وقتا شروع گفتگو با من نیست ولی دوست دارم توش بمونم.
# ✅ آره یعنی شنونده‌ای ولی ارتباط اجتماعی رو دوست داری،
# ❌ نه یعنی ترجیح می‌دی سکوت کنی یا کلاً وارد گفتگو نشی،
# ❓ نمی‌دونم یعنی گاهی شروع می‌کنی گاهی نه.""",
#         "dimension": "EI",
#         "direction": "E"
#     },
#     {
#         "text": """2️⃣2️⃣ به چیزایی علاقه دارم که بتونم لمسشون کنم و واقعی باشن.
# ✅ آره یعنی با عینیت و واقعیت راحت‌تری،
# ❌ نه یعنی مفاهیم ذهنی برات جذاب‌ترن،
# ❓ نمی‌دونم یعنی هر دو سبک برات مهمن.""",
#         "dimension": "SN",
#         "direction": "S"
#     },
#     {
#         "text": """3️⃣2️⃣ اگه احساس کسی مخالف واقعیته باشه، واقعیت رو ترجیح می‌دم.
# ✅ آره یعنی واقع‌نگری حتی اگه سخت باشه،
# ❌ نه یعنی اول احساسات طرف رو در نظر می‌گیری،
# ❓ نمی‌دونم یعنی بستگی به موقعیت داره.""",
#         "dimension": "TF",
#         "direction": "T"
#     },
#     {
#         "text": """4️⃣2️⃣ قبل از شروع هر چیزی دوست دارم بدونم به کجا ختم می‌شه.
# ✅ آره یعنی آینده‌نگر و محتاطی،
# ❌ نه یعنی ریسک‌پذیر و اهل تجربه‌ای،
# ❓ نمی‌دونم یعنی گاهی برنامه‌ریز گاهی اهل ریسک.""",
#         "dimension": "JP",
#         "direction": "J"
#     },
#     {
#         "text": """5️⃣2️⃣ ارتباط گرفتن با آدم‌های جدید برام راحته.
# ✅ آره یعنی برون‌گرا و سریع ارتباط‌گیر،
# ❌ نه یعنی درون‌گرا و محتاط توی شروع ارتباط،
# ❓ نمی‌دونم یعنی بستگی به طرف و فضا داره.""",
#         "dimension": "EI",
#         "direction": "E"
#     },
#     {
#         "text": """6️⃣2️⃣ به جای تخیل، بیشتر واقعیت‌های قابل اندازه‌گیری برام جالبه.
# ✅ آره یعنی واقع‌بینی و عملی بودن برات ارزشمنده،
# ❌ نه یعنی تخیل و ایده‌پردازی رو ترجیح می‌دی،
# ❓ نمی‌دونم یعنی هر دو برات جذابه.""",
#         "dimension": "SN",
#         "direction": "S"
#     },
#     {
#         "text": """7️⃣2️⃣ عدالت رو به همدلی ترجیح می‌دم وقتی باید انتخاب کنم.
# ✅ آره یعنی اصول‌گرا و منصفی،
# ❌ نه یعنی احساسی و همدلانه تصمیم می‌گیری،
# ❓ نمی‌دونم یعنی توازن بین عقل و احساس رو حفظ می‌کنی.""",
#         "dimension": "TF",
#         "direction": "T"
#     },
#     {
#         "text": """8️⃣2️⃣ وقتی بدون برنامه‌ریزی کاری پیش بیاد، حس خوبی ندارم.
# ✅ آره یعنی برنامه‌ریزی برات لازمه،
# ❌ نه یعنی اهل هیجان و بی‌برنامگی هستی،
# ❓ نمی‌دونم یعنی بعضی وقتا برنامه‌ریزی، بعضی وقتا آزاد.""",
#         "dimension": "JP",
#         "direction": "J"
#     },
#     {
#         "text": """9️⃣2️⃣ تو گروه بودن برام الهام‌بخشه.
# ✅ آره یعنی تعامل اجتماعی بهت انگیزه می‌ده،
# ❌ نه یعنی توی خلوت بهتر فکر می‌کنی،
# ❓ نمی‌دونم یعنی بستگی به گروه داره.""",
#         "dimension": "EI",
#         "direction": "E"
#     },
#     {
#         "text": """0️⃣3️⃣ بیشتر دوست دارم واقعیت‌ها رو ببینم تا اینکه دنبال چیزای پنهان باشم.
# ✅ آره یعنی به‌صورت عینی و واقعی فکر می‌کنی،
# ❌ نه یعنی به معناها و چیزای زیرسطحی علاقه‌داری،
# ❓ نمی‌دونم یعنی به هر دو توجه می‌کنی.""",
#         "dimension": "SN",
#         "direction": "S"
#     },
#     {
#         "text": """1️⃣3️⃣ وقتی قضاوت می‌کنم، می‌خوام قضاوتم از نظر منطقی درست باشه.
# ✅ آره یعنی دنبال عدالت و استدلالی،
# ❌ نه یعنی بیشتر دلی و احساسی قضاوت می‌کنی،
# ❓ نمی‌دونم یعنی بستگی به موقعیت داره.""",
#         "dimension": "TF",
#         "direction": "T"
#     },
#     {
#         "text": """2️⃣3️⃣ یه برنامه منظم برای آینده بهم حس کنترل و اعتماد می‌ده.
# ✅ آره یعنی آینده‌نگر و هدف‌داری،
# ❌ نه یعنی بیشتر با حال زندگی می‌کنی،
# ❓ نمی‌دونم یعنی گاهی دنبال هدفی، گاهی ولش می‌کنی.""",
#         "dimension": "JP",
#         "direction": "J"
#     }
]





def get_growth_tips_text(mbti_type: str) -> str:
    growth_tips_by_mbti = {
        "INTJ": [
            "- بیشتر به احساسات و نیازهای دیگران توجه کن.",
            "- گاهی اجازه بده کارها طبق جریان پیش برن، کنترل رو کمی رها کن.",
            "- تمرین کن تا ایده‌ها رو به‌صورت ساده‌تر به دیگران توضیح بدی.",
            "- ارتباط چشمی و زبان بدن رو جدی بگیر.",
            "- صبر برای نتایج بلندمدت رو در کنار لذت از لحظه تمرین کن."
        ],
        "INTP": [
            "- کارها رو فقط در ذهنت تحلیل نکن، حتما اجراشون کن.",
            "- تعهد به پایان‌دادن پروژه‌ها رو تمرین کن.",
            "- به جای پیچیده کردن همه چیز، ساده فکر کن.",
            "- درباره احساساتت با دیگران صحبت کن.",
            "- تمرین کن در لحظه زندگی کنی، نه فقط در ایده‌ها."
        ],
        "ENTJ": [
            "- با دلسوزی بیشتری مدیریت کن، نه فقط با منطق.",
            "- یاد بگیر گوش دادن فعالانه مهم‌تر از صحبت کردنه.",
            "- در بحث‌ها دنبال بردن نباش، دنبال فهمیدن باش.",
            "- با افراد آرام‌تر و احساسی‌تر همدلی کن.",
            "- گاهی توقف کن و به خودت هم توجه کن."
        ],
        "ENTP": [
            "- به پایان رساندن کارها رو به‌اندازه شروع‌شون جدی بگیر.",
            "- به احساسات دیگران حساس‌تر باش.",
            "- بیش‌فعالیت باعث بی‌ثباتی ذهن میشه، تمرکز تمرین کن.",
            "- تفکر بلندمدت رو تقویت کن.",
            "- گاهی بدون شوخی کردن، فقط گوش کن."
        ],
        "INFJ": [
            "- زیاد از خودت توقع نداشته باش، کامل‌گرایی سمیه.",
            "- درباره نیازهای خودت هم حرف بزن، نه فقط دیگران.",
            "- به احساس گناه برای نه گفتن غلبه کن.",
            "- زمانی برای تنهایی منظم داشته باش.",
            "- انرژی‌تو بی‌وقفه خرج نکن، شارژ دوباره ضروریه."
        ],
        "INFP": [
            "- دنبال کمال مطلق نباش، واقع‌بین باش.",
            "- به جای عقب‌نشینی از تنش، تمرین مواجهه کن.",
            "- احساسات رو بنویس یا بروز بده، نه فقط در دل نگه دار.",
            "- ساختار روزانه می‌تونه کمک کنه تمرکزت بیشتر شه.",
            "- تصمیم‌گیری رو تمرین کن، حتی اگه همیشه حس درستی نداری."
        ],
        "ENFJ": [
            "- گاهی اولویت‌ رو خودت بذار، نه فقط دیگران.",
            "- مرز مشخص بین کمک کردن و خسته کردن خودت داشته باش.",
            "- از آسیب‌پذیری فرار نکن، واقعی بودن قدرت داره.",
            "- همیشه مسئول احساس دیگران نیستی.",
            "- برای رشد خودت هم وقت بذار، نه فقط هدایت دیگران."
        ],
        "ENFP": [
            "- کار ناتموم زیاد میشه، به پایان برسون.",
            "- احساساتتو دسته‌بندی و مدیریت کن.",
            "- از توجه دیگران انرژی می‌گیری ولی نیاز به تنهایی هم داری.",
            "- روی نظم شخصی بیشتر تمرین کن.",
            "- یاد بگیر نه گفتن هم بخشی از خودشناسیه."
        ],
        "ISTJ": [
            "- انعطاف‌پذیری رو تمرین کن، همیشه برنامه جواب نمی‌ده.",
            "- گاهی از تجربه‌های جدید نترس.",
            "- فقط چون قانونیه، دلیل بر درست بودنش نیست.",
            "- احساساتت رو نادیده نگیر.",
            "- صمیمیت رو با کنترل اشتباه نگیر."
        ],
        "ISFJ": [
            "- مرز شخصی‌ت رو مشخص کن، فداکاری بی‌حد خوب نیست.",
            "- نگرانی درباره همه، به خودت آسیب می‌زنه.",
            "- مخالفت رو تمرین کن، لازمه برای رشد.",
            "- تمرکز کن روی اهداف خودت هم.",
            "- از تنهایی نترس، فرصتی برای بازیابی و تفکره."
        ],
        "ESTJ": [
            "- سخت‌گیری بیش از حد باعث فرسودگی میشه.",
            "- کنترل همه چیز ممکن نیست، پذیرش تمرین کن.",
            "- به احساسات اطرافیان توجه بیشتری داشته باش.",
            "- گاهی سکوت از قدرت بیشتره.",
            "- بیشتر از دستور دادن، الهام ببخش."
        ],
        "ESFJ": [
            "- نیاز نیست همیشه محبوب باشی.",
            "- از وابستگی به تایید دیگران فاصله بگیر.",
            "- زمان‌هایی برای خودت تنظیم کن، نه فقط برای خدمت.",
            "- تصمیم‌گیری مستقل تمرین کن.",
            "- مخالفت‌ها رو شخصی نگیر."
        ],
        "ISTP": [
            "- احساساتت رو سرکوب نکن، تحلیل‌شون کن.",
            "- برنامه‌ریزی هم لازمه، نه فقط لحظه‌ای تصمیم گرفتن.",
            "- روابط رو مثل پروژه نگاه نکن.",
            "- به دیگران فرصت بده کنارت احساس امنیت کنن.",
            "- گاهی سکون هم رشده، نه فقط حرکت."
        ],
        "ISFP": [
            "- تصمیم‌گیری سریع‌تر تمرین کن.",
            "- نیاز به آرامش، دلیل فرار از تغییر نیست.",
            "- هنر رو با ساختار همراه کن.",
            "- احساساتت ارزشمند هستن، حتی اگه بقیه درکش نکنن.",
            "- با ترس از قضاوت روبه‌رو شو."
        ],
        "ESTP": [
            "- گاهی توقف کن و فکر کن قبل از عمل.",
            "- عمق ارتباط رو فدای هیجان نکن.",
            "- بلندمدت فکر کن، نه فقط لحظه‌ای.",
            "- به احساسات دیگران بی‌تفاوت نباش.",
            "- ارزش داری حتی وقتی آرامی."
        ],
        "ESFP": [
            "- تنهایی رو به‌عنوان بخشی از تعادل بپذیر.",
            "- فقط با سرگرمی رشد نمی‌کنی، ساختار هم مهمه.",
            "- هر حرفی رو نیاز نیست بگی.",
            "- با برنامه جلو رفتن تمرین کن.",
            "- به جای فرار از ناراحتی، تجربه‌ش کن."
        ]
    }

    tips = growth_tips_by_mbti.get(mbti_type.upper())
    if not tips:
        return "توصیه‌ای برای این تیپ شخصیتی ثبت نشده است."

    text = "🌱 توصیه‌های رشد شخصی برای تیپ شما:\n" + "\n".join(tips)
    return text





def get_job_suggestions_text(mbti_type: str) -> str:
    job_suggestions_by_mbti = {
        "INTJ": [
            "🧠 معمار سیستم‌ها (Systems Architect)",
            "📊 تحلیل‌گر داده (Data Analyst)",
            "🔬 پژوهشگر علوم شناختی",
            "🗂️ مدیر پروژه‌ پیچیده",
            "📈 مشاور استراتژیک"
        ],
        "INTP": [
            "🔍 محقق یا پژوهشگر (Researcher)",
            "💻 برنامه‌نویس ارشد",
            "📊 دانشمند داده (Data Scientist)",
            "🧩 تحلیل‌گر مسائل پیچیده",
            "⚙️ طراح الگوریتم"
        ],
        "ENTJ": [
            "🏢 مدیر اجرایی (CEO)",
            "👨‍💼 رهبر تیم فنی",
            "📈 تحلیل‌گر مالی",
            "🧠 مشاور کسب‌وکار",
            "📊 مدیر توسعه استراتژیک"
        ],
        "ENTP": [
            "🚀 کارآفرین خلاق",
            "💡 مدیر نوآوری",
            "📣 استراتژیست بازاریابی",
            "🧠 مشاور برندینگ",
            "🛠️ مخترع یا نوآور"
        ],
        "INFJ": [
            "🧘‍♂️ روان‌درمانگر (Therapist)",
            "🗣️ مشاور رشد فردی",
            "📝 نویسنده یا شاعر",
            "🎭 استراتژیست فرهنگی",
            "🎤 سخنران الهام‌بخش"
        ],
        "INFP": [
            "📝 نویسنده خلاق",
            "🎨 هنرمند یا طراح",
            "🧑‍🏫 مشاور فردی",
            "🌍 فعال اجتماعی",
            "🎬 فیلم‌نامه‌نویس"
        ],
        "ENFJ": [
            "🎤 سخنران انگیزشی",
            "🤝 مدیر منابع انسانی",
            "🧠 روانشناس یا کوچ فردی",
            "🏫 آموزگار الهام‌بخش",
            "🎯 مربی رشد فردی"
        ],
        "ENFP": [
            "📢 بازاریاب خلاق",
            "🎭 مجری یا بازیگر",
            "✈️ سفرنامه‌نویس",
            "🕊️ فعال اجتماعی",
            "📱 مدیر کمپین‌های تبلیغاتی"
        ],
        "ISTJ": [
            "🎖️ افسر نظامی",
            "📋 مدیر پروژه‌ی فنی",
            "🧾 حسابدار دقیق",
            "📊 تحلیل‌گر داده",
            "🏗️ مهندس سازه"
        ],
        "ISFJ": [
            "👩‍⚕️ پرستار یا پزشک عمومی",
            "👩‍🏫 معلم یا مربی کودک",
            "🧑‍🤝‍🧑 مددکار اجتماعی",
            "🏫 مدیر مدرسه",
            "📚 دبیر امور فرهنگی"
        ],
        "ESTJ": [
            "🧑‍💼 مدیر سازمانی",
            "📉 تحلیل‌گر مالی",
            "⚖️ قاضی یا حقوق‌دان",
            "🔍 کارشناس کنترل کیفیت",
            "🎖️ افسر ارشد"
        ],
        "ESFJ": [
            "👨‍🏫 مشاور تحصیلی یا خانواده",
            "📚 معلم دبیرستان",
            "🗣️ مدیر روابط عمومی",
            "📈 مدیر فروش",
            "🎓 مربی موفقیت تحصیلی"
        ],
        "ISTP": [
            "🛠️ تکنسین فنی",
            "⚙️ مهندس مکانیک",
            "🔍 محقق جنایی",
            "🏕️ ماجراجو یا تعمیرکار",
            "🚓 افسر پلیس فنی"
        ],
        "ISFP": [
            "🖌️ هنرمند تصویری",
            "📸 عکاس حرفه‌ای",
            "👗 طراح لباس یا مد",
            "🎼 نوازنده یا آهنگساز",
            "🏠 طراح داخلی"
        ],
        "ESTP": [
            "🧑‍💼 بازاریاب حضوری",
            "🧑‍🔧 کارشناس فروش حرفه‌ای",
            "🚒 آتش‌نشان یا امدادگر",
            "🏋️ مربی ورزشی",
            "🚀 کارآفرین میدانی"
        ],
        "ESFP": [
            "📺 مجری تلویزیونی",
            "🎭 بازیگر یا خواننده",
            "🎉 طراح رویداد",
            "📱 مدیر شبکه‌های اجتماعی",
            "🧳 سفرنامه‌ساز"
        ]
    }

    jobs = job_suggestions_by_mbti.get(mbti_type.upper())
    if not jobs:
        return "شغل‌های پیشنهادی برای این تیپ شخصیتی ثبت نشده‌اند."

    text = "💼 شغل‌های پیشنهادی:\n" + "\n".join(f"- {job}" for job in jobs)
    return text



def get_famous_people_text(mbti_type: str) -> str:
    famous_people_by_mbti = {
        "INTJ": [
            "- ایلون ماسک (Elon Musk)",
            "- مارک زاکربرگ (Mark Zuckerberg)",
            "- آرنولد شوارتزنگر (Arnold Schwarzenegger)",
            "- هیلاری کلینتون (Hillary Clinton)",
            "- فرانسیس بیکن (Francis Bacon)"
        ],
        "INTP": [
            "- آلبرت اینشتین (Albert Einstein)",
            "- لئوناردو داوینچی (Leonardo da Vinci)",
            "- لیدی گاگا (Lady Gaga)",
            "- ایزاک نیوتون (Isaac Newton)",
            "- بیل گیتس (Bill Gates)"
        ],
        "ENTJ": [
            "- استیو جابز (Steve Jobs)",
            "- گوردون رامزی (Gordon Ramsay)",
            "- مارگارت تاچر (Margaret Thatcher)",
            "- فرانکلین روزولت (Franklin D. Roosevelt)",
            "- چارلز داروین (Charles Darwin)"
        ],
        "ENTP": [
            "- توماس ادیسون (Thomas Edison)",
            "- ریچارد برانسون (Richard Branson)",
            "- مایکل جردن (Michael Jordan)",
            "- بن فرانکلین (Benjamin Franklin)",
            "- سارا سیلورمن (Sarah Silverman)"
        ],
        "INFJ": [
            "- مارتین لوتر کینگ (Martin Luther King Jr.)",
            "- نلسون ماندلا (Nelson Mandela)",
            "- مهاتما گاندی (Mahatma Gandhi)",
            "- اوپرا وینفری (Oprah Winfrey)",
            "- کارل یونگ (Carl Jung)"
        ],
        "INFP": [
            "- ویلیام شکسپیر (William Shakespeare)",
            "- جانی دپ (Johnny Depp)",
            "- جاناتان فرانزن (Jonathan Franzen)",
            "- جیم کری (Jim Carrey)",
            "- کورت کوبین (Kurt Cobain)"
        ],
        "ENFJ": [
            "- باراک اوباما (Barack Obama)",
            "- جنیفر لاورنس (Jennifer Lawrence)",
            "- مت دیمون (Matt Damon)",
            "- بون جووی (Jon Bon Jovi)",
            "- مارتا استوارت (Martha Stewart)"
        ],
        "ENFP": [
            "- رابین ویلیامز (Robin Williams)",
            "- چارلی چاپلین (Charlie Chaplin)",
            "- ماریا کری (Mariah Carey)",
            "- سوزان ساراندون (Susan Sarandon)",
            "- والت دیزنی (Walt Disney)"
        ],
        "ISTJ": [
            "- جورج واشنگتن (George Washington)",
            "- مگان مارکل (Meghan Markle)",
            "- جفرسون دیویس (Jefferson Davis)",
            "- هلن کلر (Helen Keller)",
            "- والت دیزنی (Walt Disney)"
        ],
        "ISFJ": [
            "- کاترین دوم (Catherine the Great)",
            "- ملکه ویکتوریا (Queen Victoria)",
            "- بتی وایت (Betty White)",
            "- مادر ترزا (Mother Teresa)",
            "- رایان رینولدز (Ryan Reynolds)"
        ],
        "ESTJ": [
            "- دونالد ترامپ (Donald Trump)",
            "- جین فاندا (Jane Fonda)",
            "- هریسون فورد (Harrison Ford)",
            "- جف بزوس (Jeff Bezos)",
            "- آدولف هیتلر (Adolf Hitler)"
        ],
        "ESFJ": [
            "- تیلور سوئیفت (Taylor Swift)",
            "- هیو جکمن (Hugh Jackman)",
            "- بیانسه (Beyoncé)",
            "- بیل کلینتون (Bill Clinton)",
            "- جولیا رابرتز (Julia Roberts)"
        ],
        "ISTP": [
            "- کلینت ایستوود (Clint Eastwood)",
            "- مایکل جکسون (Michael Jackson)",
            "- بری لارسون (Brie Larson)",
            "- جان وین (John Wayne)",
            "- بروسلی (Bruce Lee)"
        ],
        "ISFP": [
            "- میک جگر (Mick Jagger)",
            "- مایا آنجلو (Maya Angelou)",
            "- برد پیت (Brad Pitt)",
            "- پرنسس دایانا (Princess Diana)",
            "- جنیفر انیستون (Jennifer Aniston)"
        ],
        "ESTP": [
            "- دونالد ترامپ (Donald Trump)",
            "- اریکا بادو (Erykah Badu)",
            "- دیوید بکهام (David Beckham)",
            "- دنیل کریگ (Daniel Craig)",
            "- دوجا کت (Doja Cat)"
        ],
        "ESFP": [
            "- ماریلین مونرو (Marilyn Monroe)",
            "- پابلو پیکاسو (Pablo Picasso)",
            "- جیمی فالون (Jimmy Fallon)",
            "- سلنا گومز (Selena Gomez)",
            "- راب لو (Rob Lowe)"
        ]
    }

    people = famous_people_by_mbti.get(mbti_type.upper())
    if not people:
        return "افراد معروفی برای این تیپ شخصیتی ثبت نشده‌اند."

    text = "🧑‍💼 افراد معروف با همین تیپ:\n" + "\n".join(people)
    return text



def get_strengths_weaknesses_text(mbti_type: str) -> str:
    traits = {
        "INTJ": {
            "strengths": [
                "✔ هدف‌گرا و با برنامه",
                "✔ تفکر تحلیلی قوی",
                "✔ اهل رشد و پیشرفت مداوم",
                "✔ مستقل و خوداتکا",
                "✔ استراتژیست عالی"
            ],
            "weaknesses": [
                "✖ گاهی بیش از حد سرد و منطقی",
                "✖ وسواس در کمال‌گرایی",
                "✖ ناتوانی در تحمل افراد کم‌فکر",
                "✖ ضعف در ابراز احساسات",
                "✖ تمایل به انتقاد زیاد"
            ]
        },
        "INTP": {
            "strengths": [
                "✔ ذهن خلاق و تحلیل‌گر",
                "✔ عاشق یادگیری مفاهیم عمیق",
                "✔ مستقل و متفکر",
                "✔ تمرکز بالا روی مسائل پیچیده",
                "✔ کنجکاوی بی‌پایان"
            ],
            "weaknesses": [
                "✖ حواس‌پرتی و پراکندگی ذهن",
                "✖ سختی در پیاده‌سازی ایده‌ها",
                "✖ دوری از احساسات و روابط عاطفی",
                "✖ گم‌شدن در تفکرات انتزاعی",
                "✖ بی‌انگیزگی در کارهای تکراری"
            ]
        },
        "ENTJ": {
            "strengths": [
                "✔ رهبر قوی و سازمان‌دهنده",
                "✔ هدف‌محور و مصمم",
                "✔ ذهن منطقی و بلندپرواز",
                "✔ مهارت در مدیریت و تصمیم‌گیری",
                "✔ انگیزه بالا برای موفقیت"
            ],
            "weaknesses": [
                "✖ سلطه‌جو بودن",
                "✖ صبر کم در برابر اشتباه دیگران",
                "✖ سرد بودن در روابط عاطفی",
                "✖ تمرکز کم روی جزئیات احساسی",
                "✖ عجله در رسیدن به نتیجه"
            ]
        },
        "ENTP": {
            "strengths": [
                "✔ خلاق و نوآور",
                "✔ سخن‌ورز قوی",
                "✔ سازگار و منعطف",
                "✔ کنجکاو و علاقه‌مند به مباحث چالشی",
                "✔ حل‌کننده عالی مسائل"
            ],
            "weaknesses": [
                "✖ ناپایداری در تمرکز",
                "✖ بی‌نظمی",
                "✖ اشتیاق زیاد به شروع ولی نه پایان پروژه‌ها",
                "✖ تمایل به بحث زیاد",
                "✖ بی‌حوصلگی سریع"
            ]
        },
        "INFJ": {
            "strengths": [
                "✔ بینش عمیق و فلسفی",
                "✔ انسان‌دوست و فداکار",
                "✔ هدف‌گرا و با رسالت مشخص",
                "✔ شنونده خوب",
                "✔ تفکر عمیق و تحلیلی"
            ],
            "weaknesses": [
                "✖ مرز زیاد با دیگران",
                "✖ حساسیت بالا به نقد",
                "✖ خستگی از ارتباط زیاد با دیگران",
                "✖ ایده‌آلیست افراطی",
                "✖ سکوت در مواقع ضروری"
            ]
        },
        "INFP": {
            "strengths": [
                "✔ وفادار و صادق",
                "✔ خلاق و هنرمند",
                "✔ دارای ارزش‌های قوی",
                "✔ شنونده عالی",
                "✔ اهل خودشناسی"
            ],
            "weaknesses": [
                "✖ گم‌شدن در رویاها",
                "✖ حساسیت بالا به انتقاد",
                "✖ اجتناب از درگیری",
                "✖ نوسانات احساسی",
                "✖ تصمیم‌گیری کند"
            ]
        },
        "ENFJ": {
            "strengths": [
                "✔ دلسوز و حمایتگر",
                "✔ هدف‌گرا و الهام‌بخش",
                "✔ ارتباط قوی با دیگران",
                "✔ دارای درک اجتماعی بالا",
                "✔ رشد‌دهنده و تشویق‌کننده"
            ],
            "weaknesses": [
                "✖ حساس به نقد",
                "✖ گاهی بیش از حد قربانی دیگران",
                "✖ ناامید شدن از دیگران",
                "✖ استرس‌پذیری بالا",
                "✖ ضعف در گفتن «نه»"
            ]
        },
        "ENFP": {
            "strengths": [
                "✔ پرانرژی و خلاق",
                "✔ ارتباط‌گیر عالی",
                "✔ مثبت‌اندیش و انگیزشی",
                "✔ نوآور و بازیگوش",
                "✔ علاقه‌مند به روابط عمیق"
            ],
            "weaknesses": [
                "✖ پراکندگی توجه",
                "✖ ضعف در پیگیری کارها",
                "✖ حساس به استرس",
                "✖ تمایل به اجتناب از تعارض",
                "✖ بی‌صبری"
            ]
        },
        "ISTJ": {
            "strengths": [
                "✔ مسئول و قابل اعتماد",
                "✔ منظم و دقیق",
                "✔ منطقی و واقع‌بین",
                "✔ وفادار و پایدار",
                "✔ عمل‌گرا و هدفمند"
            ],
            "weaknesses": [
                "✖ انعطاف‌ناپذیر",
                "✖ بیان محدود احساسات",
                "✖ سخت‌گیری بیش از حد",
                "✖ مقاومت در برابر تغییرات",
                "✖ تمایل به قضاوت سریع"
            ]
        },
        "ISFJ": {
            "strengths": [
                "✔ مهربان و حمایتگر",
                "✔ وفادار و مسئولیت‌پذیر",
                "✔ منظم و دقیق",
                "✔ واقع‌بین و منطقی",
                "✔ متعهد و با اخلاق"
            ],
            "weaknesses": [
                "✖ مقاومت در برابر تغییر",
                "✖ دشواری در ابراز نیازها",
                "✖ استرس‌پذیری بالا",
                "✖ تمایل به اجتناب از تعارض",
                "✖ محافظه‌کار"
            ]
        },
        "ESTJ": {
            "strengths": [
                "✔ سازمان‌دهنده و رهبر",
                "✔ عمل‌گرا و هدفمند",
                "✔ منطقی و قاطع",
                "✔ پرانرژی و مصمم",
                "✔ مسئول و قابل اعتماد"
            ],
            "weaknesses": [
                "✖ عجول و بی‌حوصله",
                "✖ انعطاف‌ناپذیر",
                "✖ سلطه‌جو و کنترل‌گر",
                "✖ حساس به انتقاد",
                "✖ دشواری در ابراز احساسات"
            ]
        },
        "ESFJ": {
            "strengths": [
                "✔ اجتماعی و مهربان",
                "✔ ارتباط‌گیر عالی",
                "✔ حمایتگر و مسئول",
                "✔ هدفمند و متعهد",
                "✔ مثبت‌اندیش و پرانرژی"
            ],
            "weaknesses": [
                "✖ حساس به نقد",
                "✖ وابستگی زیاد به نظر دیگران",
                "✖ استرس‌پذیری بالا",
                "✖ دشواری در گفتن «نه»",
                "✖ تمایل به اجتناب از تعارض"
            ]
        },
        "ISTP": {
            "strengths": [
                "✔ عمل‌گرا و مستقل",
                "✔ تحلیل‌گر و منطقی",
                "✔ سازگار و آرام",
                "✔ تمرکز بالا در بحران‌ها",
                "✔ حل‌کننده مسائل"
            ],
            "weaknesses": [
                "✖ بی‌تفاوت و سرد",
                "✖ بی‌حوصلگی",
                "✖ مقاومت در برابر قوانین",
                "✖ اجتناب از تعهدات بلندمدت",
                "✖ دشواری در بیان احساسات"
            ]
        },
        "ISFP": {
            "strengths": [
                "✔ هنرمند و خلاق",
                "✔ مهربان و دلسوز",
                "✔ آرام و صبور",
                "✔ دوستدار طبیعت",
                "✔ عمل‌گرا"
            ],
            "weaknesses": [
                "✖ کم‌حرف و درون‌گرا",
                "✖ اجتناب از تعارض",
                "✖ حساس به انتقاد",
                "✖ بی‌ثباتی در اهداف",
                "✖ عدم تمایل به برنامه‌ریزی"
            ]
        },
        "ESTP": {
            "strengths": [
                "✔ پرانرژی و پرشور",
                "✔ واقع‌بین و عمل‌گرا",
                "✔ سریع‌العمل و تصمیم‌گیر",
                "✔ اجتماعی و برون‌گرا",
                "✔ حل‌کننده مسائل"
            ],
            "weaknesses": [
                "✖ بی‌ثباتی در تعهدات",
                "✖ بی‌صبری و عجول بودن",
                "✖ تمایل به خطرپذیری",
                "✖ دشواری در برنامه‌ریزی بلندمدت",
                "✖ بی‌توجهی به جزئیات"
            ]
        },
        "ESFP": {
            "strengths": [
                "✔ اجتماعی و خوش‌برخورد",
                "✔ پرانرژی و مثبت‌اندیش",
                "✔ خلاق و هنرمند",
                "✔ مهربان و دلسوز",
                "✔ عمل‌گرا"
            ],
            "weaknesses": [
                "✖ کم‌توجه به جزئیات",
                "✖ پراکندگی و ناپایداری",
                "✖ بی‌صبری",
                "✖ دشواری در برنامه‌ریزی بلندمدت",
                "✖ تمایل به اجتناب از تعارض"
            ]
        }
    }

    mbti_type = mbti_type.upper()
    if mbti_type not in traits:
        return "نقاط قوت و ضعف این تیپ هنوز ثبت نشده‌اند."

    strengths = traits[mbti_type]["strengths"]
    weaknesses = traits[mbti_type]["weaknesses"]

    text = "💪 نقاط قوت:\n" + "\n".join(f"- {s}" for s in strengths)
    text += "\n\n⚠️ نقاط ضعف:\n" + "\n".join(f"- {w}" for w in weaknesses)

    return text



class AdvancedMBTI(StatesGroup):
    q_index = State()
    answers = State()

class SlideResult(StatesGroup):
    slide = State()
    mbti_type = State()
    saved = State()




def question_advance_buttons():
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="✅ بله", callback_data="advanced_yes"),
            InlineKeyboardButton(text="❌ خیر", callback_data="advanced_no")
        ],
        [
            InlineKeyboardButton(text="❓ نمی‌دونم", callback_data="advanced_idk")
        ],
        [
            InlineKeyboardButton(text="🔙 بازگشت", callback_data="advanced_back")
        ]
    ])

# --- محاسبه درصدها ---
def calculate_percentages(answers: list, questions: list[dict]) -> dict:
    scores = {
        "EI": {"E": 0, "I": 0},
        "SN": {"S": 0, "N": 0},
        "TF": {"T": 0, "F": 0},
        "JP": {"J": 0, "P": 0}
    }

    for answer, question in zip(answers, questions):
        dim = question["dimension"]
        dir = question["direction"]

        opposite = {"E": "I", "I": "E", "S": "N", "N": "S", "T": "F", "F": "T", "J": "P", "P": "J"}

        if answer == 1:
            scores[dim][dir] += 1
        elif answer == 0:
            scores[dim][opposite[dir]] += 1
        elif answer == 0.5:
            scores[dim][dir] += 0.5
            scores[dim][opposite[dir]] += 0.5

    percentages = {}
    for dim, options in scores.items():
        keys = list(options.keys())
        total = options[keys[0]] + options[keys[1]] or 1
        for key in options:
            percentages[key] = int((options[key] / total) * 100)

    return percentages


def safe_percent(value):
    if value is None:
        return 0
    if value <= 1:
        return int(value * 100)
    return int(value)



class SlideResult(StatesGroup):
    slide = State()
    mbti_type = State()
    saved = State()

def question_advance_buttons():
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="✅ بله", callback_data="advanced_yes"),
            InlineKeyboardButton(text="❌ خیر", callback_data="advanced_no")
        ],
        [
            InlineKeyboardButton(text="❓ نمی‌دونم", callback_data="advanced_idk")
        ],
        [
            InlineKeyboardButton(text="🔙 بازگشت", callback_data="advanced_back")
        ]
    ])


def format_advanced_result(result, name):
    print("📬 Input to format_advanced_result:", result)
    percentages = result.get("percentages")
    if percentages is None:
        print("⚠️ Warning: percentages is None in result!")
        percentages = {}
    I = safe_percent(percentages.get("I"))
    E = safe_percent(percentages.get("E"))
    N = safe_percent(percentages.get("N"))
    S = safe_percent(percentages.get("S"))
    T = safe_percent(percentages.get("T"))
    F = safe_percent(percentages.get("F"))
    J = safe_percent(percentages.get("J"))
    P = safe_percent(percentages.get("P"))

    mbti_type = (
        ("I" if I > E else "E") +
        ("N" if N > S else "S") +
        ("T" if T > F else "F") +
        ("J" if J > P else "P")
    )

    slide_0 = (f"""
📊 نتیجه تست پیشرفته MBTI برای {name} جان

🧬 تیپ شخصیت تو: **{mbti_type}**

📊 تحلیل ابعاد شخصیت:

🧠 انرژی:
I (درون‌گرا) {I}% | E (برون‌گرا) {E}%

🔍 اطلاعات:
N (شهودی) {N}% | S (حسی) {S}%

⚖️ تصمیم‌گیری:
T (منطقی) {T}% | F (احساسی) {F}%

🗂️ سبک زندگی:
J (ساخت‌گرا) {J}% | P (منعطف) {P}%
""")
    return  slide_0, mbti_type



@router.callback_query(F.data == "mbti_advanced_start")
async def start_advanced_test(callback: CallbackQuery, state: FSMContext):
    await state.set_state(AdvancedMBTI.q_index)
    await state.update_data(q_index=0, answers=[])
    await send_advanced_question(callback, state)

@router.callback_query(F.data.in_(["advanced_yes", "advanced_no", "advanced_idk"]))
async def handle_advanced_answer(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    index = data.get("q_index", 0)
    answers = data.get("answers", [])

    mapping = {
        "advanced_yes": 1,
        "advanced_no": 0,
        "advanced_idk": 0.5
    }
    answers.append(mapping[callback.data])

    await state.update_data(q_index=index + 1, answers=answers)
    await send_advanced_question(callback, state)

    await callback.answer()

async def send_advanced_question(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    index = data.get("q_index", 0)

    if index < len(mbti_advanced_questions):
        question = mbti_advanced_questions[index]
        await callback.message.edit_text(
            question["text"],  # فقط متن، نه کل دیکشنری
            reply_markup=question_advance_buttons()
        )

        await callback.answer()
    else:
        # پایان تست
        await callback.message.edit_text("✅ تست پیشرفته به پایان رسید. در حال پردازش نتیجه هستیم...")

        data = await state.get_data()
        result = calculate_percentages(data["answers"], mbti_advanced_questions)
        name = get_user_profile(callback.from_user.id)[0] or "رفیق"
        text ,mbti_type = format_advanced_result(result, name)

        # ست کردن استیت جدید برای حالت اسلایدی
        await state.set_state(SlideResult.slide)
        await state.set_state(SlideResult.slide)
        await state.update_data(
            slide=0, mbti_type=mbti_type,
            saved=False, name=name,
            full_result_text=text  # 👈 این خط مهمه
        )

        # گرفتن محتوای اسلاید اول
        content = get_slide_content(0, mbti_type, name, result)
        keyboard = get_slide_keyboard(0, False)

        await callback.message.edit_text(f"{content}\n\n(1/5)", reply_markup=keyboard)
        await callback.answer()


@router.callback_query(F.data == "advanced_back")
async def go_back_advanced_question(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    index = max(data.get("q_index", 0) - 1, 0)
    answers = data.get("answers", [])

    if answers:
        answers.pop()

    await state.update_data(q_index=index, answers=answers)
    await send_advanced_question(callback, state)
    await callback.answer()


# --- اسلایدها ---
async def get_slide_content(state: FSMContext, slide_num: int) -> str:
    data = await state.get_data()
    mbti_type = data.get("mbti_type", "INTP")
    name = data.get("name", "رفیق")

    if slide_num == 0:
        return data.get("full_result_text", "❌ نتیجه‌ای برای نمایش وجود ندارد.")
    elif slide_num == 1:
        return get_job_suggestions_text(mbti_type)
    elif slide_num == 2:
        return get_strengths_weaknesses_text(mbti_type)
    elif slide_num == 3:
        return get_growth_tips_text(mbti_type)
    else:
        return "پایان تحلیل. برای شروع دوباره /start را بزنید."

def get_slide_keyboard(current_slide: int, saved: bool):
    buttons = []
    if current_slide > 0:
        buttons.append(InlineKeyboardButton(text="⬅️ قبل", callback_data="prev_slide"))
    if current_slide < 4:
        buttons.append(InlineKeyboardButton(text="بعد ➡️", callback_data="next_slide"))
    if not saved:
        buttons.append(InlineKeyboardButton(text="✅ ذخیره تست", callback_data="save_result"))

    return InlineKeyboardMarkup(inline_keyboard=[buttons])


def get_slide_content(slide_num: int, mbti_type: str, name: str, result: dict):
    print("📊 Result received in get_slide_content:", result)
    # بر اساس شماره اسلاید، محتوای مناسب رو بازگردونه
    if slide_num == 0:
        text, _ = format_advanced_result(result, name)
        return text
    elif slide_num == 1:
        return get_job_suggestions_text(mbti_type)
    elif slide_num == 2:
        return get_strengths_weaknesses_text(mbti_type)
    elif slide_num == 3:
        return get_growth_tips_text(mbti_type)
    elif slide_num == 4:
        _,final_slide = format_advanced_result(result, name)
        return final_slide


def get_slide_keyboard(current_slide: int, saved: bool):
    buttons = []
    if current_slide > 0:
        buttons.append(InlineKeyboardButton(text="⬅️ قبل", callback_data="prev_slide"))
    if current_slide < 4:  # تعداد اسلایدهای تحلیل (مثلا 4)
        buttons.append(InlineKeyboardButton(text="بعد ➡️", callback_data="next_slide"))
    if not saved:
        buttons.append(InlineKeyboardButton(text="✅ ذخیره تست", callback_data="save_result"))

    return InlineKeyboardMarkup(inline_keyboard=[buttons])









@router.callback_query(F.data.in_(["next_slide", "prev_slide", "save_result"]))
async def slide_navigation_handler(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    current_slide = data.get("slide", 0)
    mbti_type = data.get("mbti_type")
    saved = data.get("saved", False)
    name = data.get("name", "رفیق")
    result = data.get("result")

    if callback.data == "next_slide":
        current_slide = min(current_slide + 1, 4)
    elif callback.data == "prev_slide":
        current_slide = max(current_slide - 1, 0)
    elif callback.data == "save_result" and not saved:
        await save_user_result(callback.from_user.id, mbti_type)
        saved = True

    await state.update_data(slide=current_slide, saved=saved)

    content = get_slide_content(current_slide, mbti_type, name, result)
    keyboard = get_slide_keyboard(current_slide, saved)
    await callback.message.edit_text(f"{content}\n\n({current_slide + 1}/5)", reply_markup=keyboard)
    await callback.answer(text="نتیجه ذخیره شد." if callback.data == "save_result" else "اسلاید تغییر کرد.")







# سوالات تست ساده MBTI
mbti_simple_questions = [
    """1️⃣ من حال می‌کنم بیشتر وقتامو با بقیه بگذرونم، با جمع خوش می‌گذره، تنها بمونم حوصلم سر می‌ره.  
✅ بله یعنی آره جمع‌دوستی،  
❌ نه یعنی تنهایی رو بیشتر دوست داری،  
❓ نمی‌دونم یعنی بعضی وقتا اینطوری بعضی وقتا اونطوری.""",

    """2️⃣ وقتی یه کاری رو شروع می‌کنم، دوست دارم تمومش کنم حتی اگه خسته بشم یا سخت باشه.  
✅ بله یعنی ول نمی‌کنی تا تهش بری،  
❌ نه یعنی وسط کار ممکنه بیخیال شی،  
❓ نمی‌دونم یعنی بستگی به شرایط داره.""",

    """3️⃣ من آدم ریزبین و نکته‌بینم، چیزایی رو می‌بینم که بقیه نمی‌بینن یا توجه نمی‌کنن.  
✅ بله یعنی خیلی جزئیاتی،  
❌ نه یعنی درشت‌بینی و حوصله ریزه‌کاری نداری،  
❓ نمی‌دونم یعنی گاهی هستی گاهی نه.""",

    """4️⃣ بعضی وقتا یه حسی بهم می‌گه چی درسته، بدون اینکه دلیل داشته باشم.  
✅ بله یعنی به حس ششمت اعتماد داری،  
❌ نه یعنی بدون دلیل کاری نمی‌کنی،  
❓ نمی‌دونم یعنی گاهی به حس خودت گوش می‌دی گاهی نه.""",

    """5️⃣ من آدم منطقی‌ام، هر کاری می‌کنم باید براش دلیل و منطق داشته باشه.  
✅ بله یعنی دنبال دلیل و منطقی،  
❌ نه یعنی بعضی کارا رو دلی انجام می‌دی،  
❓ نمی‌دونم یعنی بستگی به موقعیت داره.""",

    """6️⃣ اول دلم می‌خواد حال و احساس طرفو بفهمم بعد قضاوت کنم.  
✅ بله یعنی آدم دلسوز و همدلی،  
❌ نه یعنی مستقیم قضاوت می‌کنی،  
❓ نمی‌دونم یعنی گاهی همدلی می‌کنی گاهی نه.""",

    """7️⃣ قبل هر کاری دوست دارم بدونم قراره چی بشه و برنامه‌ریزی کنم.  
✅ بله یعنی اهل برنامه‌ای،  
❌ نه یعنی می‌ذاری هرچی پیش اومد پیش میاد،  
❓ نمی‌دونم یعنی بعضی وقتا برنامه داری بعضی وقتا بیخیالی.""",

    """8️⃣ بعضی وقتا وسط شلختگی و بی‌نظمی بهترین فکرا میاد تو ذهنم.  
✅ بله یعنی تو بی‌برنامگی ایده‌دار می‌شی،  
❌ نه یعنی فقط با نظم و برنامه خوب کار می‌کنی،  
❓ نمی‌دونم یعنی گاهی اینطوری گاهی اونطوری.""",

    """9️⃣ بودن بین کلی آدم بهم انرژی می‌ده و شارژ می‌شم.  
✅ بله یعنی جمع‌دوستی،  
❌ نه یعنی تنهایی رو بیشتر دوست داری،  
❓ نمی‌دونم یعنی بستگی به حال و روزت داره.""",

    """🔟 بیشتر دوست دارم گوش بدم تا اینکه خودم حرف بزنم.  
✅ بله یعنی شنونده‌ای،  
❌ نه یعنی بیشتر دوست داری حرف بزنی،  
❓ نمی‌دونم یعنی بستگی به جمع و حال داری.""",

    """1️⃣1️⃣ دوست دارم چیزایی که واقعی باشن رو تجربه کنم، رویاپردازی زیاد حال نمی‌ده.  
✅ بله یعنی عمل‌گرا و واقع‌بین،  
❌ نه یعنی رویاپرداز و خیال‌باف،  
❓ نمی‌دونم یعنی بستگی به موقعیت داره.""",

    """2️⃣1️⃣ بعضی وقتا بدون اینکه همه چیزو بدونم، فقط چون حس خوبی دارم یه تصمیم می‌گیرم.  
✅ بله یعنی دلی و احساسی تصمیم می‌گیری،  
❌ نه یعنی حتماً باید همه چی رو بدونی،  
❓ نمی‌دونم یعنی بستگی داره.""",

    """3️⃣1️⃣ تو بحثا اول از همه می‌خوام ببینم منطق حرف طرف چیه، حالا هرکی می‌خواد باشه.  
✅ بله یعنی اهل منطق و استدلالی،  
❌ نه یعنی بیشتر احساسی یا شخصی می‌بینی،  
❓ نمی‌دونم یعنی بستگی به بحث و طرف داره.""",

    """4️⃣1️⃣ اگه یکی ناراحت باشه، حتی اگه خودش مقصر بوده، دلم می‌خواد آرومش کنم.  
✅ بله یعنی دلسوز و مهربونی،  
❌ نه یعنی می‌گی خودش مقصره ولش کن،  
❓ نمی‌دونم یعنی گاهی آروم می‌کنی گاهی نه.""",

    """5️⃣1️⃣ اگه یهویی بگن بیا بریم سفر و من خبر نداشته باشم، استرس می‌گیرم.  
✅ بله یعنی اهل برنامه‌ریزی‌ای،  
❌ نه یعنی آدم یهویی و بی‌برنامه‌ای،  
❓ نمی‌دونم یعنی بستگی به حال و مکان داره.""",

    """6️⃣1️⃣ بعضی وقتا دلم می‌خواد همه چی رو ول کنم و فقط برم دنبال حال خوش اون لحظه.  
✅ بله یعنی آدم لحظه‌ای و اهل حال،  
❌ نه یعنی بیشتر کنترل داری و منطقی،  
❓ نمی‌دونم یعنی گاهی اینطوری گاهی اونطوری."""
]


# وضعیت‌ها برای تست ساده
class SimpleMBTI(StatesGroup):
    q_index = State()
    answers = State()

# دکمه شروع تست ساده
@router.callback_query(F.data == "mbti_simple")
async def simple_test_intro(callback: CallbackQuery, state: FSMContext):
    profile = get_user_profile(callback.from_user.id)
    name = profile[0] if profile else "رفیق"

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="✅ بزن بریم", callback_data="simple_start")],
        [InlineKeyboardButton(text="🔙 بازگشت", callback_data="main_menu")]
    ])

    await callback.message.edit_text(
        text=f""" سلام {name}🎉 
قراره یه تست شخصیت ساده و باحال بگیریم که بفهمیم مدل شخصیتت چیه 😎  
هر سوال رو می‌پرسم، تو هم فقط بزن:
✅ «بله» اگه حس می‌کنی این حرف درسته در موردت  
❌ «نه» اگه کلاً اینطوری نیستی  
❓ «نمی‌دونم» اگه مرددی یا بعضی وقتا اینجوری هستی بعضی وقتا نه  

حواست باشه، جواب درست و غلط نداره! فقط همون چیزی که به دلت می‌شینه رو بزن ❤️  
خب بریم که داشته باشیم! 🚀""",
        reply_markup=keyboard
    )
    await callback.answer()

# شروع تست ساده
@router.callback_query(F.data == "simple_start")
async def start_simple_test(callback: CallbackQuery, state: FSMContext):
    await state.set_state(SimpleMBTI.q_index)
    await state.update_data(q_index=0, answers=[])
    await send_question(callback, state)

simple_mbti_descriptions = {
    "INTJ": "متفکر استراتژیک، برنامه‌ریز بلندمدت، مستقل و منطقی.",
    "INTP": "تحلیل‌گر خلاق، عاشق مفاهیم پیچیده و عمیق، پرسشگر و نوآور.",
    "ENTJ": "رهبر طبیعی، تصمیم‌گیر قاطع، هدف‌مند و پرانرژی.",
    "ENTP": "ماجراجوی فکری، اهل بحث، خلاق و همیشه دنبال چالش جدید.",
    "INFJ": "بینش‌مند و درون‌گرا، با هدف و علاقه‌مند به کمک به دیگران.",
    "INFP": "آرمان‌گرا، خلاق، وفادار به ارزش‌ها و عمیقاً احساسی.",
    "ENFJ": "الهام‌بخش و کاریزماتیک، حامی دیگران و علاقه‌مند به هماهنگی.",
    "ENFP": "سرزنده، خلاق، مشتاق برقراری ارتباط و دنبال معنا در زندگی.",
    "ISTJ": "قابل اعتماد، مسئولیت‌پذیر، عاشق ساختار و نظم.",
    "ISFJ": "مهربان و وفادار، علاقه‌مند به کمک به دیگران در سکوت.",
    "ESTJ": "مدیر عمل‌گرا، منطقی و سازمان‌یافته با مهارت‌های اجرایی.",
    "ESFJ": "اجتماعی، متعهد، مراقب حال اطرافیان و پیرو سنت‌ها.",
    "ISTP": "عمل‌گرا، تحلیل‌گر مسائل فنی، ساکت و مستقل.",
    "ISFP": "ساده‌زیست، مهربان، هنردوست و علاقه‌مند به هماهنگی.",
    "ESTP": "سرزنده، ریسک‌پذیر، عاشق تجربه‌های جدید و نتایج سریع.",
    "ESFP": "خوش‌مشرب، سرگرم‌کننده، عاشق جمع و تجربه‌های لذت‌بخش."
}

def question_buttons():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="✅ بله", callback_data="simple_yes"),
         InlineKeyboardButton(text="❌ خیر", callback_data="simple_no")],
        [InlineKeyboardButton(text="❓ نمی‌دونم", callback_data="simple_idk")],
        [InlineKeyboardButton(text="🔙 بازگشت", callback_data="simple_back")]
    ])

async def send_simple_mbti_result(callback: CallbackQuery, state: FSMContext, mbti_type: str):
    profile = get_user_profile(callback.from_user.id)
    name = profile[0] if profile else "رفیق"

    description = simple_mbti_descriptions.get(mbti_type, "شخصیتی خاص و منحصربه‌فرد داری که ترکیبی از ویژگی‌های متعادله.")

    caption = f"""🧾 نتیجه تست ساده MBTI برای {name} جان

📌 تیپ شخصیتی: {mbti_type}
{description}

---
📌 این فقط خلاصه‌ای از تیپ شخصیتی تو بود.
🎯 تست ساده MBTI حدود 60% دقت داره و برای شناخت اولیه خوبه ولی تست پیشرفته بالای 95% دقت تشخصیت میده 

🔍 ببین توی نسخه پیشرفته قراره چه چیزایی بهت بگیم:

✔ تحلیل کامل شخصیت
✔ درصد ویژگی‌های روانی تو
✔ شغل‌هایی که برای تو ساخته شدن
✔ مقایسه با افراد معروف
✔ توصیه‌های خاص برای موفقیت تو

🔓 نسخه پیشرفته رو بخر فقط با ۳۹,۰۰۰ تومان!
"""
    test_type = "simple"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="🔑 باز کردن تست پیشرفته", callback_data="mbti_advanced")],
        [InlineKeyboardButton(text="💾 ذخیره تست", callback_data=f"save_test:{test_type}:{mbti_type}")],
        [InlineKeyboardButton(text="🏠 بازگشت به منوی اصلی", callback_data="back_to_main")]
    ])

    # مسیر تصویر
    image_path = f"img/{mbti_type}.png"

    # ارسال عکس
    if os.path.exists(image_path):
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(photo=photo, caption=caption, reply_markup=keyboard)
    else:
        await callback.message.answer(f"{caption}\n(عکس یافت نشد)", reply_markup=keyboard)

    await state.clear()
    await callback.answer()

# 🧠 این همون تابعیه که سوالات رو نشون میده و در انتها نتیجه رو
async def send_question(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    index = data.get("q_index", 0)
    answers = data.get("answers", [])
    user_id = callback.from_user.id

    if 0 <= index < len(mbti_simple_questions):
        question = mbti_simple_questions[index]
        await callback.message.edit_text(question, reply_markup=question_buttons())
        await callback.answer()
    else:
        profile = get_user_profile(user_id)
        name = profile[0] if profile else "رفیق"

        # محاسبه تیپ ساده از جواب‌ها:
        def majority(idx): return sum(answers[i] for i in idx) >= len(idx) / 2

        E = majority([0, 8, 9])
        S = majority([2, 3, 10, 11])
        T = majority([4, 5, 12, 13])
        J = majority([1, 6, 7, 14, 15])

        mbti_type = (
            ("E" if E else "I") +
            ("S" if S else "N") +
            ("T" if T else "F") +
            ("J" if J else "P")
        )

        text, keyboard = await send_simple_mbti_result(callback, state, mbti_type)
        await callback.message.edit_text(text, reply_markup=keyboard)
        await state.clear()
        await callback.answer()

# هندل پاسخ‌ها
@router.callback_query(
    F.data.in_(["simple_yes", "simple_no", "simple_idk"]))
async def handle_answer(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    index = data.get("q_index", 0)
    answers = data.get("answers", [])

    if callback.data == "simple_yes":
        answer = 1
    elif callback.data == "simple_no":
        answer = 0
    else:
        answer = 0.5
    answers.append(answer)

    await state.update_data(q_index=index + 1, answers=answers)
    await send_question(callback, state)

# بازگشت به سوال قبلی
@router.callback_query(F.data == "simple_back")
async def go_back_question(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    index = max(data.get("q_index", 0) - 1, 0)
    answers = data.get("answers", [])

    if answers:
        answers.pop()

    await state.update_data(q_index=index, answers=answers)
    await send_question(callback, state)






async def send_mbti_result_image(user_id: int, mbti_type: str, description: str, bot: Bot):
    image_path = f"img/{mbti_type}.jpg"
    photo = FSInputFile(image_path)
    caption = f"📌 تیپ شخصیتی شما: {mbti_type}\n\n{description}"

    await bot.send_photo(
        chat_id=user_id,
        photo=photo,
        caption=caption
    )

@router.callback_query(lambda c: c.data.startswith("save_test:"))
async def handle_save_test(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    _, test_type, mbti_type = callback.data.split(":")

    save_latest_test(user_id, mbti_type, test_type)

    tehran_time = datetime.now(pytz.timezone('Asia/Tehran')).strftime("%Y-%m-%d %H:%M")
    await callback.message.answer(f"✅ تست شما ({test_type}) با نتیجه {mbti_type} در تاریخ {tehran_time} ذخیره شد.")
    await callback.answer()
